module.exports = {
	env: {
		browser: true,
		es2021: true,
		jest: true,
	},
	extends: [
		'airbnb',
		'plugin:@typescript-eslint/recommended',
		'plugin:react/recommended',
		'plugin:react/jsx-runtime',
		'eslint-config-prettier',
	],
	parser: '@typescript-eslint/parser',
	parserOptions: {
		ecmaVersion: 'latest',
		sourceType: 'module',
	},
	plugins: [
		'react',
		'@typescript-eslint',
		'eslint-config-prettier',
	],
	settings: {
		'import/resolver': {
			node: {
				extensions: ['.js', '.jsx', '.ts', '.tsx'],
			},
		},
	},
	rules: {
		indent: [2, 'tab', { SwitchCase: 1, VariableDeclarator: 1 }],
		'no-tabs': 0,
		'react/prop-types': 0,
		'react/jsx-indent': [2, 'tab'],
		'react/jsx-indent-props': [2, 'tab'],
		'no-trailing-spaces': 'error',
		curly: 'error',
		'brace-style': 'error',
		'no-multi-spaces': 'error',
		'space-infix-ops': 'error',
		'space-unary-ops': 'error',
		'no-whitespace-before-property': 'error',
		'func-call-spacing': 'error',
		'space-before-blocks': 'error',
		'keyword-spacing': ['error', { before: true, after: true }],
		'comma-spacing': ['error', { before: false, after: true }],
		'comma-style': ['error', 'last'],
		'comma-dangle': ['error', 'always-multiline'],
		'space-in-parens': ['error', 'never'],
		'block-spacing': 'error',
		'array-bracket-spacing': ['error', 'never'],
		'object-curly-spacing': ['error', 'always'],
		'key-spacing': ['error', { mode: 'strict' }],
		'arrow-spacing': ['error', { before: true, after: true }],
		'import/no-extraneous-dependencies': ['error', {
			devDependencies: [
				'**/*.test.js',
				'**/*.test.jsx',
				'**/*.test.ts',
				'**/*.test.tsx',
			],
		}],
		'import/extensions': ['error', 'ignorePackages', {
			js: 'never',
			jsx: 'never',
			ts: 'never',
			tsx: 'never',
		}],
		'react/jsx-filename-extension': [2, {
			extensions: ['.js', '.jsx', '.ts', '.tsx'],
		}],
		'jsx-a11y/label-has-associated-control': ['error', { assert: 'either' }],
		'react/button-has-type': 'off',
		'react/jsx-one-expression-per-line': 'off',
		'react/require-default-props': 'warn',
		'prettier/prettier': ['error', { doubleQuote: true }],
		'no-shadow': 'off',
	},
};
